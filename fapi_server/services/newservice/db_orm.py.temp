from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
from .config import newserviceconfig

DATABASE_URL = f"postgresql://{newserviceconfig.DB_USER}:{newserviceconfig.DB_PASSWORD}@{newserviceconfig.DB_HOST}:{newserviceconfig.DB_PORT}/{newserviceconfig.DB_NAME}"

# Create an engine
engine = create_engine(DATABASE_URL)

# Create a base class for declarative models
Base = declarative_base()

# Create a session maker
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

# Dependency to get the database session
def get_db():
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()
